(()=>{"use strict";var e={177:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(537),o=t.n(a),r=t(645),s=t.n(r)()(o());s.push([e.id,"main {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: justify;\n    padding: 0px 30px 0px 30px;\n    background-color: #ffdebc80;\n}\n\np{\n    font-size: large;\n    font-weight: 400;\n    padding: 3px;\n    margin: 2px;\n}","",{version:3,sources:["webpack://./src/Content/content.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,0BAA0B;IAC1B,2BAA2B;AAC/B;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,WAAW;AACf",sourcesContent:["main {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: justify;\n    padding: 0px 30px 0px 30px;\n    background-color: #ffdebc80;\n}\n\np{\n    font-size: large;\n    font-weight: 400;\n    padding: 3px;\n    margin: 2px;\n}"],sourceRoot:""}]);const i=s},212:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(537),o=t.n(a),r=t(645),s=t.n(r)()(o());s.push([e.id,"footer {\n    font-weight: 700;    \n    display: flex;\n    justify-content: center;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    padding-top: 5px;\n    border: solid black 0px;\n    border-top-width: 1px;\n}","",{version:3,sources:["webpack://./src/Footer/footer.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;IAChB,uBAAuB;IACvB,qBAAqB;AACzB",sourcesContent:["footer {\n    font-weight: 700;    \n    display: flex;\n    justify-content: center;\n    margin-top: 15px;\n    margin-bottom: 5px;\n    padding-top: 5px;\n    border: solid black 0px;\n    border-top-width: 1px;\n}"],sourceRoot:""}]);const i=s},735:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(537),o=t.n(a),r=t(645),s=t.n(r)()(o());s.push([e.id,"header {\n    width: 800px;\n    display: flex;\n    justify-content: space-between;\n    font-weight: 700;\n    margin-top: 5px;\n    margin-bottom: 15px;\n}\n\n.navigation {\n    padding-top: 5px;\n    padding-bottom: 5px;\n    border: solid black 0px;\n    border-top-width: 1px;\n    border-bottom-width: 1px;\n    width: 100px;\n    text-align: center;\n}\n\n.navigation:hover {\n    cursor: pointer;\n    background-color: #fdbb7430;\n}","",{version:3,sources:["webpack://./src/Header/header.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,gBAAgB;IAChB,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;IACrB,wBAAwB;IACxB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,2BAA2B;AAC/B",sourcesContent:["header {\n    width: 800px;\n    display: flex;\n    justify-content: space-between;\n    font-weight: 700;\n    margin-top: 5px;\n    margin-bottom: 15px;\n}\n\n.navigation {\n    padding-top: 5px;\n    padding-bottom: 5px;\n    border: solid black 0px;\n    border-top-width: 1px;\n    border-bottom-width: 1px;\n    width: 100px;\n    text-align: center;\n}\n\n.navigation:hover {\n    cursor: pointer;\n    background-color: #fdbb7430;\n}"],sourceRoot:""}]);const i=s},424:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(537),o=t.n(a),r=t(645),s=t.n(r)()(o());s.push([e.id,"body {\n    margin: 0px;\n    padding: 0px;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #FFEDD5;\n    background-image: repeating-linear-gradient(45deg, transparent 5px, hsla(0, 0%, 100%, 0.349) 5px, hsla(0, 0%, 100%, 0.411) 10px,\n            hsla(5, 56%, 76%, 0) 10px, hsla(5, 100%, 85%, 0) 35px, hsla(5, 37%, 68%, 0.5) 35px, hsla(4, 36%, 70%, 0.5) 40px,\n            hsla(0, 34%, 77%, 0.5) 40px, hsla(0, 40%, 75%, 0.5) 50px, hsla(0, 100%, 91%, 0) 50px, hsla(0, 100%, 94%, 0) 60px,\n            hsla(5, 35%, 68%, 0.315) 60px, hsla(5, 27%, 67%, 0.267) 70px, hsla(35, 80%, 73%, 0.329) 70px, hsla(35, 100%, 77%, 0.349) 80px,\n            hsla(35, 100%, 78%, 0.068) 80px, hsla(35, 100%, 78%, 0.075) 90px, hsla(5, 33%, 79%, 0.267) 90px, hsla(5, 21%, 76%, 0.322) 110px,\n            hsla(5, 27%, 73%, 0) 110px, hsla(6, 21%, 82%, 0) 140px, hsla(0, 0%, 63%, 0.5) 140px, hsla(0, 3%, 87%, 0.301) 160px),\n        repeating-linear-gradient(135deg, transparent 5px, hsla(0, 0%, 100%, 0.349) 5px, hsla(0, 0%, 100%, 0.411) 10px,\n            hsla(5, 56%, 76%, 0) 10px, hsla(5, 100%, 85%, 0) 35px, hsla(5, 37%, 68%, 0.5) 35px, hsla(4, 36%, 70%, 0.5) 40px,\n            hsla(0, 34%, 77%, 0.5) 40px, hsla(0, 40%, 75%, 0.5) 50px, hsla(0, 100%, 91%, 0) 50px, hsla(0, 100%, 94%, 0) 60px,\n            hsla(5, 35%, 68%, 0.315) 60px, hsla(5, 27%, 67%, 0.267) 70px, hsla(35, 80%, 73%, 0.329) 70px, hsla(35, 100%, 77%, 0.349) 80px,\n            hsla(35, 100%, 78%, 0.068) 80px, hsla(35, 100%, 78%, 0.075) 90px, hsla(5, 33%, 79%, 0.267) 90px, hsla(5, 21%, 76%, 0.322) 110px,\n            hsla(5, 27%, 73%, 0) 110px, hsla(6, 21%, 82%, 0) 140px, hsla(0, 0%, 63%, 0.5) 140px, hsla(0, 3%, 87%, 0.301) 160px);\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB;;;;;;;;;;;+HAW2H;AAC/H",sourcesContent:["body {\n    margin: 0px;\n    padding: 0px;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #FFEDD5;\n    background-image: repeating-linear-gradient(45deg, transparent 5px, hsla(0, 0%, 100%, 0.349) 5px, hsla(0, 0%, 100%, 0.411) 10px,\n            hsla(5, 56%, 76%, 0) 10px, hsla(5, 100%, 85%, 0) 35px, hsla(5, 37%, 68%, 0.5) 35px, hsla(4, 36%, 70%, 0.5) 40px,\n            hsla(0, 34%, 77%, 0.5) 40px, hsla(0, 40%, 75%, 0.5) 50px, hsla(0, 100%, 91%, 0) 50px, hsla(0, 100%, 94%, 0) 60px,\n            hsla(5, 35%, 68%, 0.315) 60px, hsla(5, 27%, 67%, 0.267) 70px, hsla(35, 80%, 73%, 0.329) 70px, hsla(35, 100%, 77%, 0.349) 80px,\n            hsla(35, 100%, 78%, 0.068) 80px, hsla(35, 100%, 78%, 0.075) 90px, hsla(5, 33%, 79%, 0.267) 90px, hsla(5, 21%, 76%, 0.322) 110px,\n            hsla(5, 27%, 73%, 0) 110px, hsla(6, 21%, 82%, 0) 140px, hsla(0, 0%, 63%, 0.5) 140px, hsla(0, 3%, 87%, 0.301) 160px),\n        repeating-linear-gradient(135deg, transparent 5px, hsla(0, 0%, 100%, 0.349) 5px, hsla(0, 0%, 100%, 0.411) 10px,\n            hsla(5, 56%, 76%, 0) 10px, hsla(5, 100%, 85%, 0) 35px, hsla(5, 37%, 68%, 0.5) 35px, hsla(4, 36%, 70%, 0.5) 40px,\n            hsla(0, 34%, 77%, 0.5) 40px, hsla(0, 40%, 75%, 0.5) 50px, hsla(0, 100%, 91%, 0) 50px, hsla(0, 100%, 94%, 0) 60px,\n            hsla(5, 35%, 68%, 0.315) 60px, hsla(5, 27%, 67%, 0.267) 70px, hsla(35, 80%, 73%, 0.329) 70px, hsla(35, 100%, 77%, 0.349) 80px,\n            hsla(35, 100%, 78%, 0.068) 80px, hsla(35, 100%, 78%, 0.075) 90px, hsla(5, 33%, 79%, 0.267) 90px, hsla(5, 21%, 76%, 0.322) 110px,\n            hsla(5, 27%, 73%, 0) 110px, hsla(6, 21%, 82%, 0) 140px, hsla(0, 0%, 63%, 0.5) 140px, hsla(0, 3%, 87%, 0.301) 160px);\n}"],sourceRoot:""}]);const i=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(a)for(var i=0;i<this.length;i++){var p=this[i][0];null!=p&&(s[p]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);a&&s[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */"),s=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(s).concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var r={},s=[],i=0;i<e.length;i++){var p=e[i],c=a.base?p[0]+a.base:p[0],l=r[c]||0,d="".concat(c," ").concat(l);r[c]=l+1;var h=t(d),u={css:p[1],media:p[2],sourceMap:p[3],supports:p[4],layer:p[5]};if(-1!==h)n[h].references++,n[h].updater(u);else{var m=o(u,a);a.byIndex=i,n.splice(i,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<r.length;s++){var i=t(r[s]);n[i].references--}for(var p=a(e,o),c=0;c<r.length;c++){var l=t(r[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=p}}},569:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={id:a,exports:{}};return e[a](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),a=t(795),o=t.n(a),r=t(569),s=t.n(r),i=t(565),p=t.n(i),c=t(216),l=t.n(c),d=t(589),h=t.n(d),u=t(424),m={};m.styleTagTransform=h(),m.setAttributes=p(),m.insert=s().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var x=t(735),A={};A.styleTagTransform=h(),A.setAttributes=p(),A.insert=s().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=l(),n()(x.Z,A),x.Z&&x.Z.locals&&x.Z.locals;var g=t(177),f={};f.styleTagTransform=h(),f.setAttributes=p(),f.insert=s().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),n()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;const C=t.p+"411ad985ccfdea33b97e.jpg",b=function(){const e=document.createElement("main"),n=document.createElement("h1");n.textContent="Welcome to Goik's Restaurant";const t=document.createElement("h2");t.textContent="We are a brazilian pizzeria!!";const a=document.createElement("p");a.textContent="You should check our menu and place an order to see how we, brazilians, revolutionized the art of making pizza!";const o=document.createElement("p");o.textContent="Our pizzas contains an abundance of fresh selected ingredients, carefully harvested by the hands of the most beautiful sambistas girls.";const r=document.createElement("p");r.textContent="Every pizza is made by Tonhão, our amazing pizzaiolo! His fairy's hands can arrange the toppings in a way that everybody admires.";const s=document.createElement("div"),i=new Image;i.src=C,i.style.width="600px",s.appendChild(i);const p=document.createElement("div");return p.innerHTML='Photo by <a href="https://unsplash.com/es/@iavnt?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Ivan Torres</a>\n on <a href="https://unsplash.com/s/photos/pizza?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a>',p.style.textAlign="center",s.appendChild(p),e.appendChild(n),e.appendChild(t),e.appendChild(a),e.appendChild(o),e.appendChild(r),e.appendChild(s),e},y=t.p+"e7ca510545b3f10edbb6.jpg",v=t.p+"0b97352c263e04033b5f.jpg",B=t.p+"3918f46b11300e134656.jpg";function I(e){e.style.width="600px",e.style.border="solid black 2px",e.style.borderLeftWidth="0px",e.style.borderRightWidth="0px",e.style.paddingLeft="10px",e.style.paddingRight="10px",e.style.paddingBottom="10px",e.style.textAlign="center",e.style.marginTop="-2px"}var w=t(212),E={};E.styleTagTransform=h(),E.setAttributes=p(),E.insert=s().bind(null,"head"),E.domAPI=o(),E.insertStyleElement=l(),n()(w.Z,E),w.Z&&w.Z.locals&&w.Z.locals;const k=document.body;k.appendChild(function(){const e=document.createElement("header"),n=document.createElement("div");n.textContent="ABOUT";const t=document.createElement("div");t.textContent="MENU";const a=document.createElement("div");return a.textContent="CONTACT",n.id="about",t.id="menu",a.id="contact",n.className="navigation",t.className="navigation",a.className="navigation",e.appendChild(n),e.appendChild(t),e.appendChild(a),e}()),k.appendChild(b()),k.appendChild(function(){const e=document.createElement("footer"),n=document.createElement("div");return n.textContent="This is not a real restaurant -- Created by Goik for the Restaurant project on The Odin Project course",e.appendChild(n),e}());const T=document.getElementById("about"),j=document.getElementById("menu"),Z=document.getElementById("contact"),z=b(),R=function(){const e=document.createElement("main"),n=document.createElement("h1");n.textContent="Goik's Restaurant menu";const t=document.createElement("div");I(t);const a=document.createElement("h4");a.textContent="Calabresa com cebola",t.appendChild(a);const o=document.createElement("p");o.textContent="Tomato sauce, cheese, calabrian sausage, onions and black olives.",t.appendChild(o);const r=new Image;r.src=y,r.style.width="250px",t.appendChild(r);const s=document.createElement("div");I(s);const i=document.createElement("h4");i.textContent="Frango com catupiry",s.appendChild(i);const p=document.createElement("p");p.textContent="Tomato sauce, cheese, shredded chicken, catupiry cheese and olives.",s.appendChild(p);const c=new Image;c.src=v,c.style.width="250px",s.appendChild(c);const l=document.createElement("div");I(l);const d=document.createElement("h4");d.textContent="Mineira",l.appendChild(d);const h=document.createElement("p");h.textContent="Tomato sauce, cheese, corn, pea, heart of palm and catupiry cheese.",l.appendChild(h);const u=new Image;return u.src=B,u.style.width="250px",l.appendChild(u),e.appendChild(n),e.appendChild(t),e.appendChild(s),e.appendChild(l),e}(),M=function(){const e=document.createElement("main"),n=document.createElement("h1");n.textContent="Contact Goik's Restaurant!";const t=document.createElement("div");t.style.textAlign="center";const a=document.createElement("h2");a.textContent="Map";const o=document.createElement("p");o.innerHTML='<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d137126.52665332388!2d18.43080811907896!3d74.\n42445404995105!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x45bdf181870a1d07%3A0x927c85745dee2378!2sBear%20Island!5e0!3\nm2!1sen!2sbr!4v1655477332311!5m2!1sen!2sbr" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>',t.appendChild(a),t.appendChild(o);const r=document.createElement("p");r.textContent="Did I already said that this is a fake restaurant? Read footer. Phone: +AA (BB) CCCCC-DDDD - Call us and make a reservation!";const s=document.createElement("p");return s.innerHTML='If you liked what did you see, send me a message at <a href="https://github.com/Goik28">Goik28</a> on github!',e.appendChild(n),e.appendChild(t),e.appendChild(r),e.appendChild(s),e}();T.addEventListener("click",(()=>{k.replaceChild(z,document.getElementsByTagName("main")[0])})),j.addEventListener("click",(()=>{k.replaceChild(R,document.getElementsByTagName("main")[0])})),Z.addEventListener("click",(()=>{k.replaceChild(M,document.getElementsByTagName("main")[0])}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,